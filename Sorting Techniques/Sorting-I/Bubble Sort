/*
Question Link 
https://practice.geeksforgeeks.org/problems/bubble-sort/1?utm_source=youtube&utm_medium=collab_striver_ytdescription&utm_campaign=bubble-sort
*/

// GFG Solution in C++ :  //


 void bubbleSort(int arr[], int n)
    {
        int i,j;
        for(i=1; i<n; i++)
        {
        for(j=0; j<n-i; j++)
        {
            if(arr[j]>arr[j+1])
            swap(arr[j],arr[j+1]);
        }
        }
    }
    
     //--------------------------------------------------------------------------------------------------------------------------------------//
   
   // Solution in Java :  //
   
   public static void bubbleSort(int[] arr, int n) 
{
    for (int i = 0; i < n - 1; i++) 
    {
    for (int j = 0; j < n - i - 1; j++) 
    {
       if (arr[j] > arr[j + 1])
       {
          swap(arr, j, j + 1);
       }
    }
    }
}

    private static void swap(int[] arr, int i, int j)
    {
        int temp = arr[i];
        arr[i] = arr[j];
        arr[j] = temp;
    }
    
   //------------------------------------------------------------------------------------------------------------------------------------------ //  
  /* Time & Space Complexity of the Question : 
     Time Complexity : O(N) for Best case and O(N^2) for Average and Worst Cases.
     Space Complexity : O(1) because there is no used any additional data struture.So, Space is constant regerdless  of the size of the input.
   */
